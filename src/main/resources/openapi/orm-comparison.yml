openapi: 3.0.2

info:
  title: Orm Comparison API
  description: Test project for ORM mechanics comparison purpose
  contact:
    name: Andrew Belunov
    email: cyberpunk.perosn@gmail.com
  version: 1.0.0

tags:
  - name: items
    description: Items in store
  - name: orders
    description: Orders form with items by users
  - name: users
    description: Users of the store

paths:

  /items:

    get:
      tags:
        - items
      summary: getItems
      description: Get all existing items
      operationId: getItems
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetItemsResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /orders:

    get:
      tags:
        - orders
      summary: getOrders
      description: Get all existing orders
      operationId: getOrders
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /users:

    get:
      tags:
        - users
      summary: getUsers
      description: Get all existing users
      operationId: getUsers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'


components:

  responses:

    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:

    GetItemsResponse:
      type: object
      required:
        - items
      properties:
        items:
          description: List of existing items
          type: array
          items:
            $ref: '#/components/schemas/Item'

    GetOrdersResponse:
      type: object
      required:
        - items
      properties:
        items:
          description: List of existing orders
          type: array
          items:
            $ref: '#/components/schemas/Order'

    GetUsersResponse:
      type: object
      required:
        - items
      properties:
        items:
          description: List of existing users
          type: array
          items:
            $ref: '#/components/schemas/User'

    Item:
      description: Item in the store
      type: object
      required:
        - id
        - title
        - description
        - price
      properties:
        id:
          description: Item identificator
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        title:
          description: Item's title
          type: string
          minLength: 1
          example: Example Title
        description:
          description: Item's description
          type: string
          minLength: 1
          example: Example desecription
        price:
          description: Item's price
          type: double

    Order:
      description: Order in the store
      type: object
      required:
        - id
        - userId
        - items
      properties:
        id:
          description: order identificator
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        userId:
          description: userId who formed order
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        items:
          description: Items in the order
          type: array
          items:
            $ref: '#/components/schemas/Item'

    User:
      description: User in the store
      type: object
      required:
        - id
        - name
        - address
      properties:
        id:
          description: User identificator
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        name:
          description: User name
          type: string
          example: Ivan
        address:
          description: User's address
          $ref: '#/components/schemas/Address'

    Address:
      description: User's address
      type: object
      required:
        - id
        - country
        - city
        - street
        - zip
      properties:
        id:
          description: Address identificator
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        country:
          type: string
          example: Russia
        city:
          type: string
          example: Krasnoyarsk
        street:
          type: string
          example: Mira
        zip:
          type: integer
          example: 640441

    ErrorResponse:
      description: Error response
      type: object
      required:
        - errorId
        - errorCode
        - errorMessage
      properties:
        errorId:
          description: Error identificator
          type: string
          minLength: 16
          maxLength: 16
          example: 02d55cabb05b44f0
        errorCode:
          description: Service error code
          type: string
          minLength: 1
          example: InternalServerError
        errorMessage:
          description: service error message
          type: string
          minLength: 1
          example: Internal server error
        errorDetails:
          description: Error details
          type: object